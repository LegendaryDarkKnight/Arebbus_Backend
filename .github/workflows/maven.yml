name: Build, Test & Deploy to Azure

on:
  push:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Maven Clean
        run: mvn clean

      - name: Maven Validate
        run: mvn validate

      - name: Maven Compile
        run: mvn compile

      - name: Maven Test
        run: mvn test

      - name: Maven Package
        run: mvn package

      - name: Maven Verify
        run: mvn verify

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  deploy-azure:
    needs: build-test
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Needed to push updated version.txt

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: downloaded-jar

      - name: Rename for Docker
        run: |
          mkdir -p target
          cp downloaded-jar/*.jar target/app.jar

      - name: Read and bump version
        id: version
        run: |
          VERSION_FILE=version.txt
          OLD_VERSION=$(cat $VERSION_FILE | tr -d 'v')
          NEW_VERSION=$((OLD_VERSION + 1))
          echo "v$NEW_VERSION" > $VERSION_FILE
          echo "VERSION=v$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit new version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add version.txt
          git commit -m "Bump version to ${{ steps.version.outputs.VERSION }}"
          git push origin main

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Register Azure providers
        run: |
          az provider register --namespace Microsoft.ContainerInstance
          az provider register --namespace Microsoft.ContainerRegistry

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push to ACR
        run: |
          ACR_LOGIN_SERVER="${{ secrets.ACR_NAME }}.azurecr.io"
          IMAGE_NAME="arebbus-backend"
          
          # Build the Docker image
          docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:latest .
          docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ steps.version.outputs.VERSION }} .
          
          # Push to ACR
          docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:latest
          docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ steps.version.outputs.VERSION }}

      - name: Deploy to Azure Container Instance
        run: |
          ACR_LOGIN_SERVER="${{ secrets.ACR_NAME }}.azurecr.io"
          IMAGE_NAME="arebbus-backend"
          
          # Delete existing container instance if it exists
          az container delete \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_NAME }} \
            --yes || true
          
          # Create new container instance
          az container create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_NAME }} \
            --image $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ steps.version.outputs.VERSION }} \
            --registry-login-server $ACR_LOGIN_SERVER \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --cpu 2 \
            --memory 2 \
            --ports 6996 \
            --ip-address public \
            --os-type Linux \
            --restart-policy Always \
            --dns-name-label arebbus-backend-${{ github.run_number }} \
            --environment-variables \
              POSTGRES_URL="${{ secrets.POSTGRES_URL }}" \
              POSTGRES_USER="${{ secrets.POSTGRES_USER }}" \
              POSTGRES_PASS="${{ secrets.POSTGRES_PASS }}" \
              SECRET_KEY="${{ secrets.SECRET_KEY }}" \
              FRONTEND_URL="${{ secrets.FRONTEND_URL }}"

      - name: Get Container Instance IP and Status
        run: |
          CONTAINER_IP=$(az container show \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_NAME }} \
            --query ipAddress.ip \
            --output tsv)
          
          CONTAINER_STATE=$(az container show \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_NAME }} \
            --query containers[0].instanceView.currentState.state \
            --output tsv)
          
          echo "=== Deployment Status ==="
          echo "Container State: $CONTAINER_STATE"
          echo "Application URL: http://$CONTAINER_IP:6996"
          echo "=========================="
          
          # Wait a few seconds for container to start
          sleep 10
          
          echo "=== Testing Connectivity ==="
          CONTAINER_IP=$(az container show \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_NAME }} \
            --query ipAddress.ip \
            --output tsv)
          
          echo "Testing port connectivity..."
          nc -zv $CONTAINER_IP 6996 || echo "Port 6996 not accessible"
          
          echo "=== Container Logs ==="
          az container logs \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.ACI_NAME }} || true