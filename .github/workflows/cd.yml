name: CD - Deploy to Azure VM

on:
  workflow_run:
    workflows: ["CI - Build and Test"]
    types:
      - completed
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    environment:
      name: production

    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      - name: Connect to Azure VM and Deploy
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            echo "🔍 Checking for existing arebbus container..."
          
            # Check if container exists and is running
            if docker ps -q -f name=arebbus; then
              echo "📦 Found running arebbus container, stopping it..."
              docker stop arebbus
            fi
          
            # Check if container exists (stopped)
            if docker ps -aq -f name=arebbus; then
              echo "🗑️ Removing existing arebbus container..."
              docker rm arebbus
            fi
          
            # Pull latest image from Docker Hub
            echo "⬇️ Pulling latest image from Docker Hub..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/arebbus-backend:latest
          
            # Run new container
            echo "🚀 Starting new arebbus container..."
            docker run -d \
              --name arebbus \
              -p 8080:6996 \
              --restart unless-stopped \
              -e POSTGRES_URL="${{ secrets.POSTGRES_URL }}" \
              -e POSTGRES_USER="${{ secrets.POSTGRES_USER }}" \
              -e POSTGRES_PASS="${{ secrets.POSTGRES_PASS }}" \
              -e SECRET_KEY="${{ secrets.SECRET_KEY }}" \
              -e FRONTEND_URL="${{ secrets.FRONTEND_URL }}" \
              -e JAVA_OPTS="-Xmx1g -Djava.security.egd=file:/dev/./urandom" \
              ${{ secrets.DOCKER_USERNAME }}/arebbus-backend:latest
          
            # Wait for container to start
            echo "⏳ Waiting for container to start..."
            sleep 30
          
            # Check container status
            echo "📋 Container status:"
            docker ps -f name=arebbus --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
          
            # Show container logs (last 20 lines)
            echo "📄 Container logs (last 20 lines):"
            docker logs --tail 20 arebbus
          
          EOF

      - name: Health Check
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            echo "🏥 Performing health checks..."
          
            # Wait a bit more for the application to fully start
            sleep 60
          
            # Check if container is still running
            if docker ps -q -f name=arebbus; then
              echo "✅ Container is running!"
          
              # Try health check endpoints
              for i in {1..5}; do
                echo "🩺 Health check attempt $i..."
          
                if curl -f "http://localhost:6996/health" 2>/dev/null; then
                  echo "✅ Health endpoint responding!"
                  break
                elif curl -f "http://localhost:6996/" 2>/dev/null; then
                  echo "✅ Root endpoint responding!"
                  break
                else
                  echo "⏳ Health check failed, retrying in 10s..."
                  sleep 10
                fi
          
                if [ $i -eq 5 ]; then
                  echo "❌ Health checks failed after 5 attempts"
                  echo "📄 Recent container logs:"
                  docker logs --tail 50 arebbus
                  exit 1
                fi
              done
          
              echo "🎉 Deployment successful!"
              echo "📍 Application is accessible at: http://${{ secrets.VM_HOST }}:6996"
          
            else
              echo "❌ Container is not running!"
              echo "📄 Container logs:"
              docker logs arebbus
              exit 1
            fi
          EOF

      - name: Cleanup SSH
        if: always()
        run: |
          rm -f ~/.ssh/id_rsa